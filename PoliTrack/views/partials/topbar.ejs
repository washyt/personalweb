<div class="container__row-7" style="outline:0px;">
  <div class="container__col-7 fixed-top" style="border:7px; margin-left:33px; margin-top:33px;">

      <input id="page-nav-toggle" class="main-navigation-toggle" type="checkbox" />
      <label for="page-nav-toggle">
        <svg class="icon--menu-toggle grow" viewBox="0 0 60 30">
          <g class="icon-group">
            <g class="icon--menu">
              <path d="M 6 0 L 54 0" />
              <path d="M 6 15 L 54 15" />
              <path d="M 6 30 L 54 30" />

            </g>
            <g class="icon--close">
              <path d="M 15 0 L 45 30" />
              <path d="M 15 30 L 45 0" />
            </g>
          </g>
        </svg>
      </label>

      <nav class="main-navigation">
        <ul>
          <li style="margin-top:10%"><a href="/login">logout</a></li>
          <li><a href="/">Home</a></li>
          <li><a href="/notebook">notebook</a></li>
        </ul>
      </nav>
</div>
<!--
<div class="container__col-8 fixed-top " style="margin-left:169px; margin-top:33px; border:10px;">
  <div class="search" id="search">
  <input id="keyword" type="text" placeholder="search" />
  <div class="symbol">
    <svg class="cloud">
      <use xlink:href="#cloud" />
    </svg>
    <svg class="lens">
      <use xlink:href="#lens" />
    </svg>
  </div>
</div>

<!-- SVG --><!--
<svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
  <symbol xmlns="http://www.w3.org/2000/svg" viewBox="0 0 35 35" id="cloud">
    <g fill=" fill-rule="evenodd" stroke="purple" outline-opacity="10" stroke-linecap="round" stroke-linejoin="round">
    <path  d="M1.5,32h21c0.827,0,1.5-0.673,1.5-1.5V23c0-0.01-0.005-0.018-0.006-0.028
      c0.055-0.035,0.112-0.068,0.166-0.105l7.986,7.986C32.244,30.951,32.372,31,32.5,31s0.256-0.049,0.354-0.146
      c0.195-0.195,0.195-0.512,0-0.707l-7.913-7.913C26.205,21.047,27,19.366,27,17.5c0-2.297-1.201-4.316-3.006-5.472
      C23.995,12.018,24,12.01,24,12V9.5c0-0.017-0.008-0.031-0.009-0.047c-0.002-0.023-0.008-0.043-0.013-0.065
      c-0.017-0.071-0.046-0.135-0.09-0.191c-0.007-0.009-0.006-0.02-0.013-0.029l-8-9c-0.003-0.003-0.007-0.003-0.01-0.006
      c-0.06-0.065-0.137-0.108-0.223-0.134c-0.019-0.006-0.036-0.008-0.056-0.011C15.557,0.012,15.53,0,15.5,0h-14
      C0.673,0,0,0.673,0,1.5v29C0,31.327,0.673,32,1.5,32z M26,17.5c0,3.033-2.468,5.5-5.5,5.5S15,20.533,15,17.5s2.468-5.5,5.5-5.5
      S26,14.467,26,17.5z M16,1.815L22.387,9H16.5C16.28,9,16,8.58,16,8.25V1.815z M1,1.5C1,1.224,1.225,1,1.5,1H15v7.25
      C15,9.059,15.655,10,16.5,10H23v1.501C22.23,11.179,21.386,11,20.5,11c-1.838,0-3.496,0.77-4.679,2H5.5C5.224,13,5,13.224,5,13.5
      S5.224,14,5.5,14h9.532c-0.565,0.879-0.922,1.901-1.006,3H5.5C5.224,17,5,17.224,5,17.5S5.224,18,5.5,18h8.525
      c0.084,1.099,0.442,2.121,1.006,3H5.5C5.224,21,5,21.224,5,21.5S5.224,22,5.5,22h10.25c0.021,0,0.039-0.009,0.06-0.012
      C16.994,23.225,18.657,24,20.5,24c0.886,0,1.73-0.179,2.5-0.502V30.5c0,0.276-0.225,0.5-0.5,0.5h-21C1.22,31,1,30.78,1,30.5V1.5z"
      />
    <path fill="#828282" d="M5.5,10h6c0.276,0,0.5-0.224,0.5-0.5S11.776,9,11.5,9h-6C5.224,9,5,9.224,5,9.5S5.224,10,5.5,10z"/>
    <path fill="#828282" d="M5.5,26h13c0.276,0,0.5-0.224,0.5-0.5S18.776,25,18.5,25h-13C5.224,25,5,25.224,5,25.5S5.224,26,5.5,26z"/>
  </g>
  </symbol>

</svg>

</div>
-->
<div class="container__col-10 fixed-top " style="  top: 1em;
    right: 1em;; outline:0px;"><a href="https://imgbb.com/"><img src="https://i.ibb.co/S5Y5mcf/poli.png" alt="poli" border="0" width=150px height=38.5/></a></div>

    <div onclick="show()" class="container__col-8 fixed-top grow" style="bottom:1em; right:1em;">
<svg width="95px" height="95px" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg"><g fill="none" fill-rule="evenodd" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" transform="translate(4 3)"><path d="m3.5 1.5c-.42139382 0-1.08806048 0-2 0-.55228475 0-1 .44771525-1 1v11c0 .5522848.44771525 1 1 1h10c.5522847 0 1-.4477152 1-1v-11c0-.55228475-.4477153-1-1-1-.8888889 0-1.55555556 0-2 0"/><path d="m4.5.5h4c.55228475 0 1 .44771525 1 1s-.44771525 1-1 1h-4c-.55228475 0-1-.44771525-1-1s.44771525-1 1-1z"/><path d="m5.5 5.5h5"/><path d="m5.5 8.5h5"/><path d="m5.5 11.5h5"/><path d="m2.5 5.5h1"/><path d="m2.5 8.5h1"/><path d="m2.5 11.5h1"/></g></svg>
</div>

</div>


<div class="notes notesbar" id="notesbar" style="display:none; z-index:100;">
  <div style="margin:auto; padding:15px;">
  <form id="form" class="topBefore" method="POST" action="/">

  		  <input id="name" style="outline:.2px solid gray;" name="newName" type="text" placeholder="BILL NAME">
  		  <input id="date" style="outline:.2px solid gray;"name="newDate" type="text" placeholder="DATE">
        <input id="notes" style="height:160px;outline:.2px solid gray;" name="newNotes" type="text" placeholder="NOTES">
    <input style="height:50px;outline:.2px solid gray;"id="submit" name="ask" type="submit" value="Create">
    <input style="height:50px;outline:.2px solid gray;"id="delete" name="ask" type="submit" value="Save (keep consistent billname)">
    <input style="height:50px;outline:.2px solid gray;"id="submit" name="ask" type="submit" value="Delete">



  </form>
  <% var names = Object.keys(notesdata);%>
  <% for(var i=0; i<names.length; i++) {if(notesdata[names[i]].owner== userid){%>
    <button style="  box-sizing: border-box;
  background-color: transparent;
  border: 5px solid $red;
  border-radius: 0.3em;
  color: $red;
  cursor: pointer;
justify: content;
  font-size: .6rem;
  font-weight: 400;
  line-height: 1;
  margin-top:20px;
  padding: 1.2em 2.8em;
  text-decoration: none;
  text-transform: uppercase;
  font-weight: 700;"onclick="myFunction('<%= notesdata[names[i]].name%>', '<%= notesdata[names[i]].date%>','<%= notesdata[names[i]].notes%>','<%= [i]%>')"><%= notesdata[names[i]].name%></button>

<%}}%>

  </div>
</div>
<script>

</script>
<script>
function myFunction(name,date,notes,noteid) {
document.getElementById("name").value = name;
document.getElementById("date").value = date;
document.getElementById("notes").value = notes;

  }

  interact('.notesbar')
    .resizable({
      // resize from all edges and corners
      edges: { left: true, right: true, bottom: true, top: true },

      listeners: {
        move (event) {
          var target = event.target
          var x = (parseFloat(target.getAttribute('data-x')) || 0)
          var y = (parseFloat(target.getAttribute('data-y')) || 0)

          // update the element's style
          target.style.width = event.rect.width + 'px'
          target.style.height = event.rect.height + 'px'

          // translate when resizing from top or left edges
          x += event.deltaRect.left
          y += event.deltaRect.top

          target.style.transform = 'translate(' + x + 'px,' + y + 'px)'

          target.setAttribute('data-x', x)
          target.setAttribute('data-y', y)
        }
      },
      modifiers: [
        // keep the edges inside the parent
        interact.modifiers.restrictEdges({
          outer: 'parent'
        }),

        // minimum size
        interact.modifiers.restrictSize({
          min: { width: 100, height: 50 }
        })
      ],

      inertia: true
    })
    .draggable({
      listeners: { move: window.dragMoveListener },
      inertia: true,
      modifiers: [
        interact.modifiers.restrictRect({
          restriction: 'parent',
          endOnly: true
        })
      ]
    })

  // target elements with the "draggable" class
  interact('.notesbar')
    .draggable({
      // enable inertial throwing
      inertia: true,
      // keep the element within the area of it's parent
      modifiers: [
        interact.modifiers.restrictRect({
          restriction: 'parent',
          endOnly: true
        })
      ],
      // enable autoScroll
      autoScroll: true,

      listeners: {
        // call this function on every dragmove event
        move: dragMoveListener,

        // call this function on every dragend event
        end (event) {

        }
      }
    })

  function dragMoveListener (event) {
    var target = event.target
    // keep the dragged position in the data-x/data-y attributes
    var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx
    var y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy

    // translate the element
    target.style.transform = 'translate(' + x + 'px, ' + y + 'px)'

    // update the posiion attributes
    target.setAttribute('data-x', x)
    target.setAttribute('data-y', y)
  }

  // this function is used later in the resizing and gesture demos
  window.dragMoveListener = dragMoveListener

  function show() {
    var x = document.getElementById("notesbar");
    if (x.style.display === "none") {
      x.style.display = "block";
    } else {
      x.style.display = "none";
    }
  }
</script>
